define(["exports","./Cartesian2-baaaa1b2","./Check-3a7033c5","./when-a8daa614","./Transforms-0a2c7f40"],(function(t,e,n,i,h){"use strict";function a(t,e,n,h){this.x=i.defaultValue(t,0),this.y=i.defaultValue(e,0),this.width=i.defaultValue(n,0),this.height=i.defaultValue(h,0)}a.packedLength=4,a.pack=function(t,e,n){return n=i.defaultValue(n,0),e[n++]=t.x,e[n++]=t.y,e[n++]=t.width,e[n]=t.height,e},a.unpack=function(t,e,n){return e=i.defaultValue(e,0),(n=i.defined(n)?n:new a).x=t[e++],n.y=t[e++],n.width=t[e++],n.height=t[e],n},a.fromPoints=function(t,e){if(i.defined(e)||(e=new a),!i.defined(t)||0===t.length)return e.x=0,e.y=0,e.width=0,e.height=0,e;for(var n=t.length,h=t[0].x,r=t[0].y,d=t[0].x,u=t[0].y,c=1;c<n;c++){var o=(f=t[c]).x,f=f.y;h=Math.min(o,h),d=Math.max(o,d),r=Math.min(f,r),u=Math.max(f,u)}return e.x=h,e.y=r,e.width=d-h,e.height=u-r,e};var r=new h.GeographicProjection,d=new e.Cartographic,u=new e.Cartographic;a.fromRectangle=function(t,n,h){if(i.defined(h)||(h=new a),!i.defined(t))return h.x=0,h.y=0,h.width=0,h.height=0,h;var c=(n=i.defaultValue(n,r)).project(e.Rectangle.southwest(t,d));t=n.project(e.Rectangle.northeast(t,u));return e.Cartesian2.subtract(t,c,t),h.x=c.x,h.y=c.y,h.width=t.x,h.height=t.y,h},a.clone=function(t,e){if(i.defined(t))return i.defined(e)?(e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e):new a(t.x,t.y,t.width,t.height)},a.union=function(t,e,n){i.defined(n)||(n=new a);var h=Math.min(t.x,e.x),r=Math.min(t.y,e.y),d=Math.max(t.x+t.width,e.x+e.width);e=Math.max(t.y+t.height,e.y+e.height);return n.x=h,n.y=r,n.width=d-h,n.height=e-r,n},a.expand=function(t,e,n){n=a.clone(t,n);var i=e.x-n.x;t=e.y-n.y;return i>n.width?n.width=i:i<0&&(n.width-=i,n.x=e.x),t>n.height?n.height=t:t<0&&(n.height-=t,n.y=e.y),n},a.intersect=function(t,e){var n=t.x,i=t.y,a=e.x,r=e.y;return n>a+e.width||n+t.width<a||i+t.height<r||i>r+e.height?h.Intersect.OUTSIDE:h.Intersect.INTERSECTING},a.equals=function(t,e){return t===e||i.defined(t)&&i.defined(e)&&t.x===e.x&&t.y===e.y&&t.width===e.width&&t.height===e.height},a.prototype.clone=function(t){return a.clone(this,t)},a.prototype.intersect=function(t){return a.intersect(this,t)},a.prototype.equals=function(t){return a.equals(this,t)},t.BoundingRectangle=a}));