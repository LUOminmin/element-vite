define(["./arrayRemoveDuplicates-98e917ed","./Transforms-d7f8120c","./Cartesian2-c2e87f25","./Check-3a7033c5","./ComponentDatatype-11643cbc","./CoplanarPolygonGeometryLibrary-c6a73634","./when-a8daa614","./GeometryAttribute-c85c47e3","./GeometryAttributes-1356486e","./GeometryInstance-656b99a6","./GeometryPipeline-6828c62b","./IndexDatatype-6ac58125","./PolygonGeometryLibrary-d5117b69","./Math-9c4212b4","./RuntimeError-3ea13d12","./WebGLConstants-18e33079","./OrientedBoundingBox-5bffc097","./EllipsoidTangentPlane-3927d699","./IntersectionTests-12c4c5cb","./Plane-44fc4194","./AttributeCompression-9d280301","./EncodedCartesian3-a26ebc30","./ArcType-b86a0fcb","./EllipsoidRhumbLine-1b27589f","./PolygonPipeline-caa2b3a7"],(function(e,t,r,n,o,a,i,y,c,l,p,s,u,d,m,g,b,f,h,P,G,v,L,C,T){"use strict";function E(e){e=(e=i.defaultValue(e,i.defaultValue.EMPTY_OBJECT)).polygonHierarchy,this._polygonHierarchy=e,this._workerName="createCoplanarPolygonOutlineGeometry",this.packedLength=u.PolygonGeometryLibrary.computeHierarchyPackedLength(e)+1}E.fromPositions=function(e){return new E({polygonHierarchy:{positions:(e=i.defaultValue(e,i.defaultValue.EMPTY_OBJECT)).positions}})},E.pack=function(e,t,r){return r=i.defaultValue(r,0),t[r=u.PolygonGeometryLibrary.packPolygonHierarchy(e._polygonHierarchy,t,r)]=e.packedLength,t};var k={polygonHierarchy:{}};return E.unpack=function(e,t,r){t=i.defaultValue(t,0);var n=u.PolygonGeometryLibrary.unpackPolygonHierarchy(e,t);return t=n.startingIndex,delete n.startingIndex,t=e[t],(r=i.defined(r)?r:new E(k))._polygonHierarchy=n,r.packedLength=t,r},E.createGeometry=function(n){var i=n._polygonHierarchy;n=i.positions;if(!((n=e.arrayRemoveDuplicates(n,r.Cartesian3.equalsEpsilon,!0)).length<3)&&a.CoplanarPolygonGeometryLibrary.validOutline(n)){var d=u.PolygonGeometryLibrary.polygonOutlinesFromHierarchy(i,!1);if(0!==d.length){for(var m=[],g=0;g<d.length;g++){var b=new l.GeometryInstance({geometry:function(e){for(var t=e.length,r=new Float64Array(3*t),n=s.IndexDatatype.createTypedArray(t,2*t),a=0,i=0,l=0;l<t;l++){var p=e[l];r[a++]=p.x,r[a++]=p.y,r[a++]=p.z,n[i++]=l,n[i++]=(l+1)%t}var u=new c.GeometryAttributes({position:new y.GeometryAttribute({componentDatatype:o.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:r})});return new y.Geometry({attributes:u,indices:n,primitiveType:y.PrimitiveType.LINES})}(d[g])});m.push(b)}return n=p.GeometryPipeline.combineInstances(m)[0],i=t.BoundingSphere.fromPoints(i.positions),new y.Geometry({attributes:n.attributes,indices:n.indices,primitiveType:n.primitiveType,boundingSphere:i})}}},function(e,t){return(e=i.defined(t)?E.unpack(e,t):e)._ellipsoid=r.Ellipsoid.clone(e._ellipsoid),E.createGeometry(e)}}));